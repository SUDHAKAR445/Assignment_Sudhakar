package sortingAlgorithm;

public class QuickSortingMiddle 
{
	public static int partition(int arr[], int left, int right) 
	{
		   int leftPointer = left;
		   int rightPointer = right;
		   int pivot = arr[ left + (right-left)/2];
		   System.out.println("Pivot element is : "+pivot);
		   while(true) {
		      while(arr[++leftPointer] < pivot)
		      {
		    	  leftPointer++;
		      }
		      
		      while(arr[rightPointer] > pivot)
		      {
		    	  rightPointer --;
		      }

		      if(leftPointer >= rightPointer) 
		      {
		    	 return rightPointer;
		      }
		      Main.swap(arr, leftPointer, rightPointer);
		      leftPointer++;
		      rightPointer--;
		   }
		 
		}

		void quickSort(int arr[],int left, int right) {
		   if(left<right)
		   {
		      int partitionPoint = partition(arr,left, right);
		      quickSort(arr,left,partitionPoint);
		      quickSort(arr,partitionPoint+1,right);
		   }        
		}
	
}
